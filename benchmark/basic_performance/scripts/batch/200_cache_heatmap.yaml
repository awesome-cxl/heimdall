job_id: 200 # enum class JobId : uint32_t  @ src/core/system_define.h
repeat: 32
test_type: 0 # 0: measure access latency, 1: measure flush latency
use_flush: 0 # 0: no flush, 1: flush after one round of access
flush_type: [0] # 0: clflush, 1: clflushopt, 2: clwb
ldst_type: [0] # 0: regular # TODO: add support for 1: non-temporal, 2: atomic
core_id: [0, 20] # two cores on the different sockets
node_id: [2] # access memory on node_id
access_order: [0] # 0: random, 1: sequential
stride_size_array: [0x40, 0x80, 0x100, 0x200, 
                    0x400, 0x800, 0x1000, 0x2000,
                    0x4000, 0x8000, 0x10000, 0x20000, 
                    0x40000, 0x80000, 0x100000, 0x200000,
                    0x400000, 0x800000, 0x1000000, 0x2000000,
                    0x4000000] # 64B to 64MB
# stride_size_array: [0x40]
block_num_array: [0x1, 0x2, 0x4, 0x8,
                  0x10, 0x20, 0x40, 0x80,
                  0x100, 0x200, 0x400, 0x800,
                  0x1000, 0x2000, 0x4000, 0x8000,
                  0x10000, 0x20000, 0x40000, 0x80000,
                  0x100000] # 1 to 1MB
# block_num_array: [0x1]
